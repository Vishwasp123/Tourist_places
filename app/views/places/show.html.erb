<div class="col-lg-9">
  <h1 class="mt-3"><%= @place.place_title %></h1>
  <a id="google_maps_link_<%= @place.id %>" target="_blank">Get Directions</a>
  <p class="mb-5" id="distance_<%= @place.id %>"></p>
  <%= image_tag @place.image_url, class: "img-fluid" %>
  <div class="mt-4">  
    <%= @place.description.html_safe %>
  </div>
</div>

<div class="col-lg-3">
  <div class="card mt-4">
    <div class="card-header">
      Hotels in <%= @place.city %>
    </div>
    <div class="card-body">
      <% @hotels.each do |hotel| %>
        <div class="mb-3">
           <%= link_to hotel.name, hotel_path(hotel) %>
          <br>
        </div>
      <% end %>
    </div>
  </div>
</div>


<script>
  document.addEventListener("DOMContentLoaded", function() {
    const currentLocation = {
      latitude: null,
      longitude: null
    };

    const places = [

    {
      id: <%= @place.id %>,
      latitude: <%= @place.latitude %>,
      longitude: <%= @place.longitude %>,
    }
    ];

    function getLocation() {
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(showPosition);
      } else { 
        updateDistance("Geolocation is not supported by this browser.");
      }
    }

    function showPosition(position) {
      currentLocation.latitude = position.coords.latitude;
      currentLocation.longitude = position.coords.longitude;

      places.forEach(function(place) {
        const distance = calculateDistance(currentLocation.latitude, currentLocation.longitude, place.latitude, place.longitude);
        updateDistance(distance, place.id);

      // Add Google Maps link
        const googleMapsLink = generateGoogleMapsLink(currentLocation.latitude, currentLocation.longitude, place.latitude, place.longitude);
        updateGoogleMapsLink(googleMapsLink, place.id);
      });
    }

    function calculateDistance(lat1, lon1, lat2, lon2) {
    const R = 6371; // Radius of the Earth in kilometers
    const dLat = deg2rad(lat2 - lat1);
    const dLon = deg2rad(lon2 - lon1);
    const a =
    Math.sin(dLat / 2) * Math.sin(dLat / 2) +
    Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) *
    Math.sin(dLon / 2) * Math.sin(dLon / 2);
    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
    const distance = R * c; // Distance in kilometers
    return distance.toFixed(2); // Round to 2 decimal places
  }

  function deg2rad(deg) {
    return deg * (Math.PI / 180);
  }

  function updateDistance(distance, placeId) {
    const distanceElement = document.getElementById("distance_" + placeId);
    if (distanceElement) {
      distanceElement.innerHTML = distance + " km" + " away";
    }
  }

  // Function to generate Google Maps link
  function generateGoogleMapsLink(currentLat, currentLng, destLat, destLng) {
    return `https://www.google.com/maps/dir/${currentLat},${currentLng}/${destLat},${destLng}`;
  }

  // Function to update Google Maps link
  function updateGoogleMapsLink(link, placeId) {
    const googleMapsLinkElement = document.getElementById("google_maps_link_" + placeId);
    if (googleMapsLinkElement) {
      googleMapsLinkElement.href = link;
    }
  }

  getLocation();
});
</script>
